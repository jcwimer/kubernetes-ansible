---
- name: Update apt
  apt: update_cache=yes
  become: true

- name: Install programs to add debian repositories
  apt: name={{ item }}  state=present force=yes
  with_items:
    - curl
    - apt-transport-https
  become: true

- name: Add kubernetes key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  become: true

- name: Add kubernetes repo
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
  become: true

- name: Add docker key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true

- name: Add docker repo
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
  become: true

- name: Update apt
  apt: update_cache=yes
  become: true

- name: Install kubectl
  apt: name={{ item }}  state=present force=yes
  with_items:
    - kubectl
  become: true

- name: Install docker-ce 
  shell: >
    apt-get install -y -qq docker-ce=$(apt-cache madison docker-ce | grep "{{ docker_ce_version_to_install }}" | awk {'print $3'})
  become: true

- name: Add standard user to docker group
  shell: usermod -a -G docker {{ standard_user }}
  become: true

- name: Creates RKE directory on nodes
  file:
    path: "{{ rke_node_directory }}"
    state: directory
  become: true 

- name: Check if RKE cluster state file exists
  stat:
    path: "{{ rke_node_directory }}/{{ rke_cluster_name }}.rkestate"
  register: cluster_state_result
  become: true 

- name: Check if RKE kubeconfig file exists
  stat:
    path: "{{ rke_node_directory }}/kube_config_{{ rke_cluster_name }}.yaml"
  register: kube_config_result
  become: true 

- name: Copy RKE cluster state back to local if it already exists 
  fetch: 
    src: "{{ rke_node_directory }}/{{ rke_cluster_name }}.rkestate"
    dest: "{{ rke_directory }}/{{ rke_cluster_name }}.rkestate"
    flat: yes
  when: cluster_state_result.stat.exists == True 
  become: true 

- name: Copy RKE kube config if it already exists
  fetch: 
    src: "{{ rke_node_directory }}/kube_config_{{ rke_cluster_name }}.yaml"
    dest: "{{ rke_directory }}/kube_config_{{ rke_cluster_name }}.yaml"
    flat: yes
  when: kube_config_result.stat.exists == True 
  become: true